<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
<meta name="description" content="">
<meta name="author" content="">
<link rel="icon" href="/favicon.ico">

<title>Pick and place<</title>

<!-- Bootstrap core CSS -->
<link href="/bootstrap/css/bootstrap.min.css" rel="stylesheet">

<!-- Custom styles for this template -->
<link href="/bootstrap/css/jumbotron.css" rel="stylesheet">



</head>

<body>
<div class="container">

    <p id="info"></p>
    <div class="row" >
        <div class="col-sm-4" >
            <img id="camera" class="img-responsive" width=1000 >
        </div>
        <div class="col-sm-4" >
            <img id="camera2" class="img-responsive" width=1000 >

        </div>
        <div class="col-sm-4">
            <div class="row">
                <button type="button" id="moveNegativeX2" class="btn btn-primary" >
                    X-=2
                </button>
                <button type="button" id="moveNegativeX" class="btn btn-primary" >
                    X-=0.25
                </button>
                <button type="button" id="goToZeroX" class="btn btn-primary" >
                    0
                </button>
                <button type="button" id="moveX" class="btn btn-primary" >
                    X+=0.25
                </button>
                <button type="button" id="moveX2" class="btn btn-primary" >
                    X+=2
                </button>
            </div>
            <div class="row" style="margin-top:20px">
                <button type="button" id="moveXCalibration" class="btn btn-primary" >
                    move X during calibration
                </button>
            </div>
            <div class="row" style="margin-top:20px;">
                <button type="button" id="moveNegativeY2" class="btn btn-primary" >
                    Y-=2
                </button>
                <button type="button" id="moveNegativeY" class="btn btn-primary" >
                    Y-=0.25
                </button>
                <button type="button" id="goToZeroY" class="btn btn-primary" >
                    0
                </button>
                <button type="button" id="moveY" class="btn btn-primary" >
                    Y+=0.25
                </button>
                <button type="button" id="moveY2" class="btn btn-primary" >
                    Y+=2
                </button>
            </div>
            <div class="row" style="margin-top:20px;">
                <button type="button" id="moveYCalibration" class="btn btn-primary" >
                    move Y during calibration
                </button>
            </div>
            <div class="row" style="margin-top:20px;">
                <button type="button" id="savePoint" class="btn btn-primary" >
                    save point
                </button>
                <button type="button" id="stopPoint" class="btn btn-primary" >
                    stop saving point
                </button>
                <button type="button" id="getCurrentStatus" class="btn btn-primary">
                    get current status
                </button>
            </div>
        </div>
    </div>

    <div class="row" >
        <div class="col-sm-8">
            <div id="chart" style="width:600px;height:600px;"></div>
        </div>
        <div class="col-sm-4">
            <p id="infos"></p>
        </div>
    </div>
    <div class="row">


    </div>

</div>
<!-- Bootstrap core JavaScript
================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<script src="/js/jquery-1.11.min.js"></script>
<script src="/bootstrap/js/bootstrap.min.js"></script>


<script src="/socket.io/socket.io.js"></script>
<script>
$(document).ready(function() {
    var socket = io.connect('http://192.168.0.4:8080');


    socket.on('image', function(info){
             if(info.image)
             {
            $('img#camera').attr('src', 'data:image/jpeg;base64,' + info.buffer);
            
            
             }});

    socket.on('image2', function(info){
        if(info.image)
        {
            $('img#camera2').attr('src', 'data:image/jpeg;base64,' + info.buffer);


        }});
    socket.on('point', function(point){
            addPoint(point)
    });

    socket.on('begin', function(mesage){
       socket.emit("setCalibration", true);
    });

    var savePoint=false;
    var moveXCalibration=0;
    var moveYCalibration=0;
    var currentDataIndex=0;

    var trace1 = {
        x: [],
        y: [],
        mode: 'markers',
        type: 'scatter'
    };


    var data = [trace1];

    function addPoint(point){
        if(savePoint) {
            data[currentDataIndex].x.push(point.x);
            data[currentDataIndex].y.push(point.y);
            Plotly.newPlot('chart', data);
        }

        if(moveXCalibration)
        {
            socket.emit("moveRelativeX", moveXCalibration);
        }
        else if(moveYCalibration) {
            socket.emit("moveRelativeY", moveYCalibration);
        }
    }

    //X Axis
    $("#goToZeroX").click(function(){
        socket.emit("moveAbsoluteX", 0);
    });

    $("#moveX2").click(function(){
        socket.emit("moveRelativeX", 2);
    });
    $("#moveX").click(function(){
        socket.emit("moveRelativeX", 0.25);
    });
    $("#moveNegativeX").click(function(){
        socket.emit("moveRelativeX", -0.25);
    });
    $("#moveNegativeX2").click(function(){
        socket.emit("moveRelativeX", -2);
    });
    $("#moveXCalibration").click(function(){
        moveXCalibration=0.02;
    });

    //Y Axis
    $("#goToZeroY").click(function(){
        socket.emit("moveAbsoluteY", 0);
    });
    $("#moveY2").click(function(){
        socket.emit("moveRelativeY", 2);
    });
    $("#moveY").click(function(){
        socket.emit("moveRelativeY", 0.25);
    });
    $("#moveNegativeY").click(function(){
        socket.emit("moveRelativeY", -0.25);
    });
    $("#moveNegativeY2").click(function(){
        socket.emit("moveRelativeY", -2);
    });
    $("#moveYCalibration").click(function(){
        moveYCalibration=0.02;
    });

    //mm to pixel calibration
    $("#savePoint").click(function(){
        savePoint=true;
    });

    $("#stopPoint").click(function(){
        savePoint=false;
        var xMean=0,yMean=0,number=0;

        for(var i=0; i<data[currentDataIndex].x.length; i++)
        {
            xMean+=data[currentDataIndex].x[i];
            yMean+=data[currentDataIndex].y[i];
            number++;
        }
        xMean=xMean/number;
        yMean=yMean/number;

        $("#infos").append(xMean+";"+yMean+"<br/>");
        currentDataIndex++;

        data.push({
            x: [],
            y: [],
            mode: 'markers',
            type: 'scatter'});
    });

    $("#getCurrentStatus").click(function(){
        socket.emit("getCurrentStatus", null);
    });
});


</script>

<script type="text/javascript" src="js/plotly/dependencies/d3.v3.min.js"></script>
<script type="text/javascript" src="js/plotly/dependencies/jquery-latest.js"></script>
<script type="text/javascript" src="js/plotly/plotly.min.js"></script>


<!--
    And then you are ready to make plots!
-->

</body>
</html>

